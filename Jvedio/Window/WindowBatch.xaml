<local:Jvedio_BaseWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Jvedio"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:p="clr-namespace:Jvedio.Properties"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        x:Class="Jvedio.WindowBatch"
        mc:Ignorable="d"
        Title="批量处理" 
        Height="500" Width="800"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterOwner"
        AllowDrop="True"

        >

    <local:Jvedio_BaseWindow.Resources>




        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <local:StringToUriStringConverterOther x:Key="StringToUriStringConverterOther" />
        <local:SkinTypeEnumConverter x:Key="SkinTypeEnumConverter"/>
        <local:LanguageTypeEnumConverter x:Key="LanguageTypeEnumConverter"/>

        <local:MultiIntToMarginConverter x:Key="MultiIntToMarginConverter" />


        <local:StringToCheckedConverter x:Key="StringToCheckedConverter"/>


        <local:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <local:FontFamilyToSelectedIndexConverter x:Key="FontFamilyToSelectedIndexConverter" />
        <local:BoolToFontBoldConverter x:Key="BoolToFontBoldConverter" />
        <local:BoolToFontItalicConverter x:Key="BoolToFontItalicConverter" />
        <local:BoolToUnderLineConverter x:Key="BoolToUnderLineConverter" />
        <local:FontFamilyConverter x:Key="FontFamilyConverter" />




        <Style x:Key="SettingsBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BackgroundSide}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="PlayButton" TargetType="{x:Type Canvas}">

            <Setter Property="Visibility" Value="Hidden"/>


            <Style.Triggers>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding EditMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}"  Value="False"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}, Mode=FindAncestor}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding EditMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <!--<DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}, Mode=FindAncestor}}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>-->
            </Style.Triggers>
        </Style>

        <Style x:Key="BaseTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="微软雅黑"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundSearch}"/>
        </Style>

        <Style x:Key="InfoTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>

            <Setter Property="Margin">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource MultiIntToMarginConverter}">
                        <Binding Path="MovieStyle_WordMargin_UD" Mode="OneWay" Source="{x:Static p:Settings.Default}"/>
                        <Binding Path="MovieStyle_WordMargin_LR" Mode="OneWay" Source="{x:Static p:Settings.Default}"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>


            <Style.Triggers>
                <DataTrigger  Binding="{Binding ShowImageMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}"  Value="海报图">
                    <Setter Property="Width" Value="280" />
                </DataTrigger>

                <DataTrigger  Binding="{Binding ShowImageMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}"  Value="缩略图">
                    <Setter Property="Width" Value="180" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ViewBorder" TargetType="{x:Type Border}">
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundMain}"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked, ElementName=IsMovieChecked}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource Selected_Background}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource Selected_BorderBrush}"/>
                </DataTrigger>
            </Style.Triggers>


        </Style>


        <Style x:Key="ViewStackPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="auto"/>
        </Style>


        <Style x:Key="ViewImage" TargetType="{x:Type Image}">
            <Style.Triggers>

                <DataTrigger  Binding="{Binding ShowImageMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}"  Value="海报图">
                    <Setter Property="Width" Value="280" />
                    <Setter Property="Source" Value="{Binding bigimage}" />
                </DataTrigger>

                <DataTrigger  Binding="{Binding ShowImageMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}"  Value="缩略图">
                    <Setter Property="Height" Value="180" />
                    <Setter Property="Source" Value="{Binding smallimage}" />
                </DataTrigger>


                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ShowImageMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}"  Value="海报图"/>
                        <Condition Binding="{Binding bigimage}" Value="{x:Null}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Width" Value="280" />
                    <Setter Property="Source" Value="pack://application:,,,/Resources/Picture/NoPrinting_B.jpg" />
                </MultiDataTrigger>


                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ShowImageMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}"  Value="缩略图"/>
                        <Condition Binding="{Binding smallimage}" Value="{x:Null}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Height" Value="180" />
                    <Setter Property="Source" Value="pack://application:,,,/Resources/Picture/NoPrinting_S.jpg" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="TextBlockTitle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="5 0 0 0"/>
            <Setter Property="TextAlignment" Value="Left" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundSearch}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="微软雅黑"/>
            <Setter Property="Margin" Value="20 5"/>
        </Style>



        <Style x:Key="BaseLabel" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontFamily" Value="微软雅黑"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="2 0 2 0"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundGlobal}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BackgroundMain}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="InfoLabel" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="FontFamily" Value="微软雅黑"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundSearch}"/>
        </Style>


        <Style x:Key="BaseHcTextBox" TargetType="{x:Type hc:TextBox}">
            <Setter Property="FontFamily" Value="微软雅黑"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundSearch}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundTitle}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="400"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5 0"/>
            <Setter Property="CaretBrush" Value="{DynamicResource ForegroundSearch}"/>
        </Style>


        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="#FF00C3BA"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.8" CornerRadius="3">
                            <Border.Effect>
                                <DropShadowEffect Color="#FF72FFE5" ShadowDepth="0"/>
                            </Border.Effect>
                            <TextBlock Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FF00C3BA" />


            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF00C3BA" />
                    <Setter Property="Foreground" Value="{DynamicResource ForegroundSearch}"/>
                </Trigger>
            </Style.Triggers>
        </Style>



        <!--DataGridStyle-->
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Style="{DynamicResource ScrollViewerStyle}">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <!--<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>-->
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter   x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!--分隔符-->
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder CornerRadius="5 5 0 0" Height="30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource BackgroundSide}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate    TargetType="{x:Type DataGridCell}">
                        <Border   VerticalAlignment="Center" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{DynamicResource BackgroundTitle}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
        <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Height" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeNS"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridRowHeaderStyle1" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Grid Visibility="Visible">
                            <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                                </StackPanel>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
                            <Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock  Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border Height="40"    x:Name="DGR_Border" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource BackgroundTitle}" SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsNewItem" Value="True">
                    <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle2" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <ContentPresenter  HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle2" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar  x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <ItemsPanelTemplate  x:Key="ItemsPanelTemplate1">
            <DataGridRowsPresenter x:Name="PART_RowsPresenter" IsItemsHost="True"/>
        </ItemsPanelTemplate>


    </local:Jvedio_BaseWindow.Resources>

    <Grid  Background="Transparent"   >
        <Grid Margin="0 0 0 50" Background="{DynamicResource BackgroundMain}"   Height="auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>



            <StackPanel Grid.Column="0"  Height="auto" Width="200" VerticalAlignment="Stretch"  Background="{DynamicResource BackgroundSide}"   x:Name="RadioButtonStackPanel" >
                <RadioButton Visibility="Collapsed" Content="同步信息"  Style="{StaticResource RadioButtonStyleSide}" Margin="5 20 5 0"/>
                <RadioButton IsChecked="True" Click="ShowGrid"  Content="生成 Gif"  Style="{StaticResource RadioButtonStyleSide}" Margin="5 5 5 0"/>
                <RadioButton  Content="生成截图"  Click="ShowGrid"    Style="{StaticResource RadioButtonStyleSide}" Margin="5 5 5 0"/>
                <RadioButton Content="翻译"  Click="ShowGrid"    Style="{StaticResource RadioButtonStyleSide}" Margin="5 5 5 0"/>
                <RadioButton  Content="人工智能"  Click="ShowGrid"    Style="{StaticResource RadioButtonStyleSide}" Margin="5 5 5 0"/>
            </StackPanel>


                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="100"/>
                    </Grid.RowDefinitions>

                <Grid >

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" x:Name="MainGrid">
                        



                    
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Visibility="Visible">
                        <TextBlock Text="生成 Gif" Style="{StaticResource BaseTextBlock}" HorizontalAlignment="Left" Margin="10"/>
                        <Button Content="加载" Style="{StaticResource ButtonStyleFill}" Height="25" Width="100" VerticalAlignment="Top"/>

                    </StackPanel>

                    <StackPanel Grid.Row="0" Orientation="Horizontal"  Visibility="Hidden">
                        <TextBlock Text="生成截图" Style="{StaticResource BaseTextBlock}" HorizontalAlignment="Left" Margin="10"/>
                        <Button Content="加载" Style="{StaticResource ButtonStyleFill}" Height="25" Width="100" VerticalAlignment="Top"/>
                    </StackPanel>

                    <StackPanel Grid.Row="0" Orientation="Horizontal"  Visibility="Hidden">
                        <TextBlock Text="翻译" Style="{StaticResource BaseTextBlock}" HorizontalAlignment="Left" Margin="10"/>
                        <Button Content="加载" Style="{StaticResource ButtonStyleFill}" Height="25" Width="100" VerticalAlignment="Top"/>
                    </StackPanel>

                    <StackPanel Grid.Row="0" Orientation="Horizontal"  Visibility="Hidden">
                        <TextBlock Text="人工智能" Style="{StaticResource BaseTextBlock}" HorizontalAlignment="Left" Margin="10"/>
                        <Button Content="加载" Style="{StaticResource ButtonStyleFill}" Height="25" Width="100" VerticalAlignment="Top"/>
                    </StackPanel>
                    </Grid>

                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                        <TextBlock Text="准备批量处理的影片个数：" Style="{StaticResource BaseTextBlock}" HorizontalAlignment="Left" Margin="10"/>
                        <TextBlock Height="auto" Text="20" Style="{StaticResource BaseTextBlock}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10"/>
                    </StackPanel>
                </Grid>



                    <Grid Grid.Row="1" >
                        <TextBlock  VerticalAlignment="Top"  Text="输出" Style="{StaticResource BaseTextBlock}" HorizontalAlignment="Left" Margin="10"/>
                        <TextBox  Text="" Padding="10" TextWrapping="WrapWithOverflow" Background="{DynamicResource BackgroundMenu}" Opacity="0.8" Foreground="{DynamicResource ForegroundSearch}" Height="auto" Margin="20 40 20 20 " Width="auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />



                    </Grid>

                <StackPanel Grid.Row="2" Orientation="Vertical" >
                    <TextBlock  VerticalAlignment="Top"  Text="进度" Style="{StaticResource BaseTextBlock}" HorizontalAlignment="Left" Margin="10"/>

                    <Grid   Margin="20 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <ProgressBar Grid.Column="0" Style="{StaticResource ProgressBarStyle1}" Height="10"/>
                        <TextBlock Text="10/100" Grid.Column="1" Margin="10 0" Style="{StaticResource BaseTextBlock}"/>
                    </Grid>

                    <Grid   Margin="20 10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <ProgressBar Grid.Column="0" Style="{StaticResource ProgressBarStyle1}" Height="10"/>
                        <TextBlock Text="10/100" Grid.Column="1" Margin="10 0" Style="{StaticResource BaseTextBlock}"/>
                    </Grid>

                </StackPanel>
            </Grid>





        </Grid>
        <StackPanel FlowDirection="RightToLeft" Orientation="Horizontal" HorizontalAlignment="Stretch" Background="{DynamicResource BackgroundTitle}"  Height="50" VerticalAlignment="Bottom">

            <Button Content="开始" Style="{StaticResource ButtonStyleFill}" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100" Height="25" />
            <Button Content="暂停" Style="{StaticResource ButtonStyleFill}" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100" Height="25" />
            <Button Content="取消" Style="{StaticResource ButtonStyleFill}" Background="OrangeRed" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100" Height="25" />
        </StackPanel>

    </Grid>
</local:Jvedio_BaseWindow>
