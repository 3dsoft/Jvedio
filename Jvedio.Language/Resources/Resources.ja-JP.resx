<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllVideo" xml:space="preserve">
    <value>すべての動画</value>
  </data>
  <data name="AutoClassification" xml:space="preserve">
    <value>インテリジェントな分類</value>
  </data>
  <data name="FastImport" xml:space="preserve">
    <value>追加+</value>
  </data>
  <data name="Favorites" xml:space="preserve">
    <value>スペシャルコレクション</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>隠す</value>
  </data>
  <data name="MyList" xml:space="preserve">
    <value>私のリスト</value>
  </data>
  <data name="RecentCreate" xml:space="preserve">
    <value>最近作成された</value>
  </data>
  <data name="RecentPlay" xml:space="preserve">
    <value>最近再生しました</value>
  </data>
  <data name="SearchHint" xml:space="preserve">
    <value>検索ID、俳優、名前</value>
  </data>
  <data name="VedioType" xml:space="preserve">
    <value>ビデオタイプ</value>
  </data>
  <data name="WithActress" xml:space="preserve">
    <value>俳優による</value>
  </data>
  <data name="WithGenre" xml:space="preserve">
    <value>カテゴリ別</value>
  </data>
  <data name="WithLabel" xml:space="preserve">
    <value>ラベル別</value>
  </data>
  <data name="WithPath" xml:space="preserve">
    <value>パスで</value>
  </data>
  <data name="Actress_Age" xml:space="preserve">
    <value>年齢</value>
  </data>
  <data name="Actress_Birthday" xml:space="preserve">
    <value>お誕生日</value>
  </data>
  <data name="Actress_Birthplace" xml:space="preserve">
    <value>発祥の地</value>
  </data>
  <data name="Actress_Chest" xml:space="preserve">
    <value>バスト</value>
  </data>
  <data name="Actress_Cup" xml:space="preserve">
    <value>カップ</value>
  </data>
  <data name="Actress_Height" xml:space="preserve">
    <value>高さ</value>
  </data>
  <data name="Actress_Hipline" xml:space="preserve">
    <value>ヒップ</value>
  </data>
  <data name="Actress_Hobby" xml:space="preserve">
    <value>趣味</value>
  </data>
  <data name="Actress_Waist" xml:space="preserve">
    <value>胴囲</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>応用</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>分類</value>
  </data>
  <data name="FileSize" xml:space="preserve">
    <value>ファイルサイズ</value>
  </data>
  <data name="MovieActors" xml:space="preserve">
    <value>主演スタッフ</value>
  </data>
  <data name="MovieGenre" xml:space="preserve">
    <value>ビデオカテゴリ</value>
  </data>
  <data name="MovieLabels" xml:space="preserve">
    <value>ビデオタグ</value>
  </data>
  <data name="MovieRating" xml:space="preserve">
    <value>ビデオ評価</value>
  </data>
  <data name="ReleaseYear" xml:space="preserve">
    <value>発売年</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="ShowAll" xml:space="preserve">
    <value>すべて表示</value>
  </data>
  <data name="VedioDuration" xml:space="preserve">
    <value>ビデオの長さ</value>
  </data>
  <data name="Upgrade" xml:space="preserve">
    <value>アップグレード</value>
  </data>
  <data name="MovieManagement" xml:space="preserve">
    <value>映画ライブラリ</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>ツール</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>助けて</value>
  </data>
  <data name="SoftWare" xml:space="preserve">
    <value>導入手引き</value>
  </data>
  <data name="FeedBack" xml:space="preserve">
    <value>フィードバック</value>
  </data>
  <data name="WebSite" xml:space="preserve">
    <value>公式ウェブサイト</value>
  </data>
  <data name="BatchProcessing" xml:space="preserve">
    <value>バッチ処理</value>
  </data>
  <data name="Thanks" xml:space="preserve">
    <value>ありがとう</value>
  </data>
  <data name="OpenPath" xml:space="preserve">
    <value>オープンポジション</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>約</value>
  </data>
  <data name="Picture" xml:space="preserve">
    <value>画像</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>ログ</value>
  </data>
  <data name="Raname" xml:space="preserve">
    <value>ランメ</value>
  </data>
  <data name="Actor" xml:space="preserve">
    <value>俳優</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>身元</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="SearchCurrent" xml:space="preserve">
    <value>現在の検索</value>
  </data>
  <data name="Poster" xml:space="preserve">
    <value>ポスター</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="Thumbnail" xml:space="preserve">
    <value>サムネイル</value>
  </data>
</root>